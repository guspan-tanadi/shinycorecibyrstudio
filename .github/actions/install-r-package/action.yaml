name: 'Set up R package'
description: 'Install pandoc, system dependencies, and the R package dependencies'
author: 'Barret Schloerke'
inputs:
  r-version:
    default: "release"
    description: R version to be installed
    required: false
  http-user-agent:
    default: ""
    description: HTTP user agent to be sent to RSPM
    required: false
  needs:
    default: ""
    description: "Name of config to search in `DESCRIPTION` file. Ex: `website`"
    required: false
  extra-packages:
    default: ""
    description: Extra packages to be installed
    required: false
  cache-version:
    default: "1"
    description: Value to be inserted into the cache key
    required: false
  pandoc-version:
    default: "2.7.3"
    description: Pandoc version to be installed
    required: false
# outputs:
#   NAME:
#     description: 'desc here'
#     value: ${{ steps.ID.outputs.OUT_ID }}

runs:
  using: "composite"
  steps:
    - uses: r-lib/actions/setup-pandoc@v1
      with:
        pandoc-version: ${{ inputs.pandoc-version }}

    - uses: r-lib/actions/setup-r@v1
      with:
        r-version: ${{ inputs.r-version }}
        http-user-agent: ${{ inputs.http-user-agent }}
        use-public-rspm: true


    - name: Install mac deps
      uses: rstudio/shinycoreci/.github/actions/install-mac-deps@v1
      with:
        extra-packages: ${{ inputs.extra-packages }}

    - name: Run local before-install step
      uses: rstudio/shinycoreci/.github/actions-internal/run-local-step@v1
      with:
        name: before-install

    - uses: r-lib/actions/setup-r-dependencies@v1
      with:
        cache-version: ${{ inputs.cache-version }}
        needs: ${{ inputs.needs }}
        extra-packages: ${{ inputs.extra-packages }}

    # Would be nice to use this for caching phantomjs installation
    - name: Install PhantomJS group
      shell: Rscript {0}
      run: |
        cat("::group::Install PhantomJS\n")
    - name: Find PhantomJS path
      id: phantomjs
      shell: Rscript {0}
      run: |
        found <- FALSE
        if (file.exists("DESCRIPTION")) {
          desc_lines <- paste0(readLines("DESCRIPTION"), collapse = "\n")
          if (grepl("\\wshinytest\\w")) {
            # Only install if there is a direct dependency to shinytest
            pkg_name <- as.list(read.dcf("DESCRIPTION")[1,])$Package
            if (identical(pkg_name, "shinytest")) {
              pak::local_install(".")
            } else {
              # will already be installed
            }
            if (require("shinytest")) {
              phantom_path <- shinytest:::phantom_paths()[[1]]
              cat("::set-output name=path::", phantom_path, "\n", sep = "")
              found <- TRUE
            }
          }
        }
        if (!found) {
          cat("::set-output name=path::/tmp/phantomjs-not-found\n", sep = "")
        }
    - name: Cache PhantomJS
      uses: actions/cache@v2
      with:
        path: ${{ steps.phantomjs.outputs.path }}
        key: ${{ inputs.cache-version }}-phantomjs-
    - name: Install PhantomJS
      shell: Rscript {0}
      run: |
        # Install phantom only if 'shinytest' is found in DESCRIPTION file
        if (require("shinytest") && file.exists("DESCRIPTION")) {
          desc_lines <- paste0(readLines("DESCRIPTION"), collapse = "\n")
          if (grepl("\\wshinytest\\w", desc_lines)) {
            if (!shinytest::dependenciesInstalled()) {
              shinytest::installDependencies()
            }
          }
        }
